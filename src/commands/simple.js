import { geminiService } from '../services/gemini.js';
import { simpleQueryPrompt } from '../prompts/index.js';
import { safeReply } from '../utils/telegram.js';

export function setupSimpleQueryCommand(bot) {
  bot.command('s', async (ctx) => {
    const input = ctx.message.text;
    const query = input.substring(2).trim(); // –£–±–∏—Ä–∞–µ–º "/s" –∏ –ø—Ä–æ–±–µ–ª—ã

    if (!query) {
      return ctx.reply('üí≠ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /s –≤–∞—à –≤–æ–ø—Ä–æ—Å –∫ Gemini\n\n–ü—Ä–∏–º–µ—Ä: /s –†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç');
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±–æ—Ç –¥—É–º–∞–µ—Ç
    await ctx.reply('ü§î –î—É–º–∞—é...');

    try {
      const response = await geminiService.simpleQuery(simpleQueryPrompt(query));
      await safeReply(ctx, `ü§ñ **Gemini –æ—Ç–≤–µ—á–∞–µ—Ç:**\n\n${response}`, { parse_mode: 'Markdown' });
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /s:', error);
      await ctx.reply('‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Gemini.');
    }
  });
}
